// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class objetoremoto_Stub
    extends java.rmi.server.RemoteStub
    implements iobjetoremoto, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_div_0;
    private static java.lang.reflect.Method $method_mult_1;
    private static java.lang.reflect.Method $method_resta_2;
    private static java.lang.reflect.Method $method_suma_3;
    
    static {
	try {
	    $method_div_0 = iobjetoremoto.class.getMethod("div", new java.lang.Class[] {float.class, float.class});
	    $method_mult_1 = iobjetoremoto.class.getMethod("mult", new java.lang.Class[] {float.class, float.class});
	    $method_resta_2 = iobjetoremoto.class.getMethod("resta", new java.lang.Class[] {float.class, float.class});
	    $method_suma_3 = iobjetoremoto.class.getMethod("suma", new java.lang.Class[] {float.class, float.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public objetoremoto_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of div(float, float)
    public float div(float $param_float_1, float $param_float_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_div_0, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2)}, 8470995492011566896L);
	    return ((java.lang.Float) $result).floatValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of mult(float, float)
    public float mult(float $param_float_1, float $param_float_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_mult_1, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2)}, 3954580999121595623L);
	    return ((java.lang.Float) $result).floatValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of resta(float, float)
    public float resta(float $param_float_1, float $param_float_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_resta_2, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2)}, 67486160512600069L);
	    return ((java.lang.Float) $result).floatValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of suma(float, float)
    public float suma(float $param_float_1, float $param_float_2)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_suma_3, new java.lang.Object[] {new java.lang.Float($param_float_1), new java.lang.Float($param_float_2)}, 6005785161282168357L);
	    return ((java.lang.Float) $result).floatValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
